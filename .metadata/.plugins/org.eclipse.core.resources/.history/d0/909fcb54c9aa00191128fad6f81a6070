package pages;

import static org.testng.Assert.assertEquals;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;

public class ContactFormPage {

	WebDriver driver;
			
	public ContactFormPage(WebDriver driver) 
		{
			this.driver=driver; 
		} 
			    
		public void submitForm()
		{
			
			WebElement reachoutfor = driver.findElement(By.id("reachoutforproduct"));
        	Select lookfor=new Select(reachoutfor);
        	lookfor.selectByIndex(0);
        	
        	WebElement submit = driver.findElement(By.id("btnSubmit"));
        	submit.click();
        	////*[@id="dvMain"]/div/div/div[1]/div[1]
        	WebElement error = driver.findElement(By.xpath("//*[@id=\"dvMain\"]/div/div/div[1]/div[1]"));
        	if (error.isDisplayed())
        	{
        		System.out.println("Error message displayed"+error.getText());
        	}
        	//String option=lookfor.getFirstSelectedOption().getText();
        	
			//WebElement product = driver.findElement(By.id("need"));
			//Select sel_prod=new Select(product);
			
			//WebElement error = driver.findElement(By.xpath("//input[contains(@class,'has-error')]"));
			
		}
		
        public void iamLookingInto()
        {
        	//Get options from lookfor drop down
        	WebElement reachoutfor = driver.findElement(By.id("reachoutforproduct"));
        	Select lookfor=new Select(reachoutfor);
        	List<WebElement> dropdown=lookfor.getOptions();
        	 int size=dropdown.size();
        	 System.out.println("I am looking to…field is a dropdown with "+(size-1)+" choices");
        	 System.out.println("dropdown values are :");
        	 //To print drop down values
        	 for(int i=1;i<size;i++){
        	 String drop_down_values=dropdown.get(i).getText();
        	 System.out.println(drop_down_values);
        	 }
        	         	 
        }
        public void selectSubProduct()
        {
        	//When Product list is empty
        	WebElement product = driver.findElement(By.id("need"));
        	Select sel_prod=new Select(product);
        	String prod_value=sel_prod.getFirstSelectedOption().getText();
        	System.out.println(prod_value);
            Assert.assertEquals(prod_value,"-- Select Product--");
            
            //To check sub product is empty
            WebElement sub_prod = driver.findElement(By.id("product"));
            Select sel_sub=new Select(sub_prod);	
            String sub_prod_value=sel_sub.getFirstSelectedOption().getText();
            Assert.assertEquals(sub_prod_value,"-- Select Sub Product --");
            System.out.println("Sub Product list is empty");
       
        	        	        	
        }
        public void selectLoanFromProduct()
        {
        	//Select Loans from Product drop down
        	WebElement product = driver.findElement(By.id("need"));
        	Select sel_prod=new Select(product);
        	sel_prod.selectByVisibleText("Loans");
        	Assert.assertEquals(sel_prod.getFirstSelectedOption().getText(),"Loans");
        	
        	//Get options from Sub Product drop down
        	WebElement sub_prod = driver.findElement(By.id("product"));
            Select sel_sub=new Select(sub_prod);
            List<WebElement> dropdown=sel_sub.getOptions();
            
            //Excluding Select Sub Product from drop down list
            int  size=dropdown.size()-1;
            Assert.assertEquals(size,6);
            
            //Listing 6 drop down Values in sub product 
            System.out.println("dropdown values are :");
       	    for(int i=1;i<=size;i++){
       	    String drop_down_values=dropdown.get(i).getText();
       	    System.out.println(drop_down_values);
       	 }
        }
        public void mobileNumberValidation()
        {
        	WebElement mobile = driver.findElement(By.id("mobile"));
        	mobile.sendKeys("1234567");
        	String typednumber=mobile.getAttribute("value");
        	int length=typednumber.length();
        	System.out.println("Length" +length);
        	if (length!=7)
        	{
        		//When mobile number less than 7 digit
        		WebElement msg=driver.findElement(By.xpath(".//*[@id=\"dvMain\"]/div/div/div[7]/div/div[2]/span"));
        		String actual = msg.getText();
        		System.out.println(actual);
        		String expect = "Mobile number should be 7 digit";
        		Assert.assertEquals(actual, expect);
           	}
        	else
        	{
        		//When mobile number is 7 digit
        		WebElement msg=driver.findElement(By.xpath(".//*[@id=\"dvMain\"]/div/div/div[7]/div/div[2]/span"));
        		String actual = msg.getText();
        		System.out.println(actual);
        		String expect = "";
        		Assert.assertEquals(actual, expect);
        		System.out.println("Mobile Number Valid");
        			
        	}
        }

        
	}


